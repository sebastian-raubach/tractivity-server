/*
 * This file is generated by jOOQ.
 */
package uk.co.raubach.tractivity.server.database.codegen.tables;


import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import uk.co.raubach.tractivity.server.database.codegen.TractivityDb;
import uk.co.raubach.tractivity.server.database.codegen.tables.records.ViewActivityTypesRecord;


// @formatter:off
/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewActivityTypes extends TableImpl<ViewActivityTypesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tractivity_db.view_activity_types</code>
     */
    public static final ViewActivityTypes VIEW_ACTIVITY_TYPES = new ViewActivityTypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewActivityTypesRecord> getRecordType() {
        return ViewActivityTypesRecord.class;
    }

    /**
     * The column <code>tractivity_db.view_activity_types.id</code>.
     */
    public final TableField<ViewActivityTypesRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tractivity_db.view_activity_types.name</code>.
     */
    public final TableField<ViewActivityTypesRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>tractivity_db.view_activity_types.image</code>.
     */
    public final TableField<ViewActivityTypesRecord, byte[]> IMAGE = createField(DSL.name("image"), SQLDataType.BLOB, this, "");

    /**
     * The column <code>tractivity_db.view_activity_types.created_on</code>.
     */
    public final TableField<ViewActivityTypesRecord, Timestamp> CREATED_ON = createField(DSL.name("created_on"), SQLDataType.TIMESTAMP(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>tractivity_db.view_activity_types.updated_on</code>.
     */
    public final TableField<ViewActivityTypesRecord, Timestamp> UPDATED_ON = createField(DSL.name("updated_on"), SQLDataType.TIMESTAMP(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>tractivity_db.view_activity_types.count</code>.
     */
    public final TableField<ViewActivityTypesRecord, Long> COUNT = createField(DSL.name("count"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "");

    private ViewActivityTypes(Name alias, Table<ViewActivityTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewActivityTypes(Name alias, Table<ViewActivityTypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `view_activity_types` as select `tractivity`.`activity_types`.`id` AS `id`,`tractivity`.`activity_types`.`name` AS `name`,`tractivity`.`activity_types`.`image` AS `image`,`tractivity`.`activity_types`.`created_on` AS `created_on`,`tractivity`.`activity_types`.`updated_on` AS `updated_on`,count(1) AS `count` from (`tractivity`.`activity_types` left join `tractivity`.`activities` on((`tractivity`.`activities`.`activity_type_id` = `tractivity`.`activity_types`.`id`))) group by `tractivity`.`activity_types`.`id`"));
    }

    /**
     * Create an aliased <code>tractivity_db.view_activity_types</code> table
     * reference
     */
    public ViewActivityTypes(String alias) {
        this(DSL.name(alias), VIEW_ACTIVITY_TYPES);
    }

    /**
     * Create an aliased <code>tractivity_db.view_activity_types</code> table
     * reference
     */
    public ViewActivityTypes(Name alias) {
        this(alias, VIEW_ACTIVITY_TYPES);
    }

    /**
     * Create a <code>tractivity_db.view_activity_types</code> table reference
     */
    public ViewActivityTypes() {
        this(DSL.name("view_activity_types"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : TractivityDb.TRACTIVITY_DB;
    }

    @Override
    public ViewActivityTypes as(String alias) {
        return new ViewActivityTypes(DSL.name(alias), this);
    }

    @Override
    public ViewActivityTypes as(Name alias) {
        return new ViewActivityTypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewActivityTypes rename(String name) {
        return new ViewActivityTypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewActivityTypes rename(Name name) {
        return new ViewActivityTypes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, byte[], Timestamp, Timestamp, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
    // @formatter:on
}
