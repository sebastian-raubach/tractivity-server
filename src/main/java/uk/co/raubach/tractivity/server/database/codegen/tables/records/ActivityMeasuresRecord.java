/*
 * This file is generated by jOOQ.
 */
package uk.co.raubach.tractivity.server.database.codegen.tables.records;


import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import uk.co.raubach.tractivity.server.database.codegen.tables.ActivityMeasures;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityMeasuresRecord extends UpdatableRecordImpl<ActivityMeasuresRecord> implements Record7<Integer, Integer, Integer, Integer, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tractivity_db.activity_measures.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>tractivity_db.activity_measures.activity_id</code>.
     */
    public void setActivityId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.activity_id</code>.
     */
    public Integer getActivityId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>tractivity_db.activity_measures.participant_id</code>.
     */
    public void setParticipantId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.participant_id</code>.
     */
    public Integer getParticipantId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>tractivity_db.activity_measures.measure_id</code>.
     */
    public void setMeasureId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.measure_id</code>.
     */
    public Integer getMeasureId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>tractivity_db.activity_measures.measured_value</code>.
     */
    public void setMeasuredValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.measured_value</code>.
     */
    public String getMeasuredValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>tractivity_db.activity_measures.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>tractivity_db.activity_measures.updated_on</code>.
     */
    public void setUpdatedOn(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>tractivity_db.activity_measures.updated_on</code>.
     */
    public Timestamp getUpdatedOn() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, Integer, String, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ActivityMeasures.ACTIVITY_MEASURES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ActivityMeasures.ACTIVITY_MEASURES.ACTIVITY_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ActivityMeasures.ACTIVITY_MEASURES.PARTICIPANT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return ActivityMeasures.ACTIVITY_MEASURES.MEASURE_ID;
    }

    @Override
    public Field<String> field5() {
        return ActivityMeasures.ACTIVITY_MEASURES.MEASURED_VALUE;
    }

    @Override
    public Field<Timestamp> field6() {
        return ActivityMeasures.ACTIVITY_MEASURES.CREATED_ON;
    }

    @Override
    public Field<Timestamp> field7() {
        return ActivityMeasures.ACTIVITY_MEASURES.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getActivityId();
    }

    @Override
    public Integer component3() {
        return getParticipantId();
    }

    @Override
    public Integer component4() {
        return getMeasureId();
    }

    @Override
    public String component5() {
        return getMeasuredValue();
    }

    @Override
    public Timestamp component6() {
        return getCreatedOn();
    }

    @Override
    public Timestamp component7() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getActivityId();
    }

    @Override
    public Integer value3() {
        return getParticipantId();
    }

    @Override
    public Integer value4() {
        return getMeasureId();
    }

    @Override
    public String value5() {
        return getMeasuredValue();
    }

    @Override
    public Timestamp value6() {
        return getCreatedOn();
    }

    @Override
    public Timestamp value7() {
        return getUpdatedOn();
    }

    @Override
    public ActivityMeasuresRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord value2(Integer value) {
        setActivityId(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord value3(Integer value) {
        setParticipantId(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord value4(Integer value) {
        setMeasureId(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord value5(String value) {
        setMeasuredValue(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord value6(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord value7(Timestamp value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ActivityMeasuresRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivityMeasuresRecord
     */
    public ActivityMeasuresRecord() {
        super(ActivityMeasures.ACTIVITY_MEASURES);
    }

    /**
     * Create a detached, initialised ActivityMeasuresRecord
     */
    public ActivityMeasuresRecord(Integer id, Integer activityId, Integer participantId, Integer measureId, String measuredValue, Timestamp createdOn, Timestamp updatedOn) {
        super(ActivityMeasures.ACTIVITY_MEASURES);

        setId(id);
        setActivityId(activityId);
        setParticipantId(participantId);
        setMeasureId(measureId);
        setMeasuredValue(measuredValue);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }

    /**
     * Create a detached, initialised ActivityMeasuresRecord
     */
    public ActivityMeasuresRecord(uk.co.raubach.tractivity.server.database.codegen.tables.pojos.ActivityMeasures value) {
        super(ActivityMeasures.ACTIVITY_MEASURES);

        if (value != null) {
            setId(value.getId());
            setActivityId(value.getActivityId());
            setParticipantId(value.getParticipantId());
            setMeasureId(value.getMeasureId());
            setMeasuredValue(value.getMeasuredValue());
            setCreatedOn(value.getCreatedOn());
            setUpdatedOn(value.getUpdatedOn());
        }
    }
    // @formatter:on
}
